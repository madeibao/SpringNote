<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.mayuan.spring.dao.UserDao">
    <resultMap id="userList" type="user">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
    </resultMap>


    <!--提取重复的sql语句,通过include的方式来进行引用-->
    <sql id="selAll">
        select * from user
    </sql>


    <!--1、where + if 根据用户名和密码查询用户-->
    <select id="getUserByCon" resultMap="userList">
        <include refid="selAll"></include>
        <where>
            <if test="name != null and name != ''">
                name like concat('%',#{name},'%')
            </if>
            <if test="pass != null and pass != ''">
                and password like concat('%',#{pass},'%')
            </if>
        </where>
    </select>

    <!--2、trim + if 根据用户名和密码查询用户-->
    <select id="getUserByCon1" resultMap="userList">
        <include refid="selAll"></include>
        <trim prefix="where" prefixOverrides="and | or">
            <if test="name != null and name != ''">
                name like concat('%',#{name},'%')
            </if>
            <if test="pass != null and pass != ''">
                and password like concat('%',#{pass},'%')
            </if>
        </trim>
    </select>

    <!--3、更新用户，set标签的使用-->
    <update id="updateUser" parameterType="user">
        update user
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="password != null and password != ''">
                password = #{password}
            </if>
        </set>
        where id = #{id}
    </update>


    <!--4、choose(when+otherwise)，单选查询-->
    <select id="getUserByCondition" resultMap="userList">
        <include refid="selAll"></include>
        <where>
            <choose>
                <when test="userName != null and userName != ''">
                    name like concat('%',#{name},'%')
                </when>
                <when test="password != null and password != ''">
                    password like concat('%',#{password},'%')
                </when>
                <otherwise>
                    id = #{id}
                </otherwise>
            </choose>
        </where>
    </select>


    <!--foreach-->
    <select id="getUser" parameterType="list" resultMap="userList">
        <include refid="selAll"></include>
        <where>
            password in
            <foreach collection="list" item="user" open="(" separator="," close=")">
                #{user}
            </foreach>
        </where>
    </select>
</mapper>