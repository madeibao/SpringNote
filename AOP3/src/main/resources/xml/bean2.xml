<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--
        这个配置类介绍 不同通知类型的配置
            前置通知：切入点方法执行之前执行。
            后置通知：切入点方法正常执行之后执行。
            异常通知：切入点方法产生异常时才会通知。
            最终通知：无论切入点方法是否正常执行，都会通知。
        无论是否产生异常，最多只能执行 3 个通知：
            - 无异常：执行后置通知，不执行异常通知
            - 有异常：不执行后置通知，执行异常通知
            - 后置通知和异常通知只能二选一。
    -->

    <!--配置 Spring 的 IoC ，把 Service 对象配置进来-->
    <bean id="accountService" class="com.jk.xml.service.impl.AccountServiceImpl"/>

    <!-- 配置通知类-->
    <bean id="aopUtil" class="com.jk.xml.utils.AopUtil"/>
    
    <aop:config>
        <aop:aspect id="accountAdvice" ref="aopUtil">
            <!--前置通知：切入点方法执行之前执行-->
            <aop:before method="beforeAdvice" pointcut="execution(* com.jk.xml.service.impl.*.saveAccount(..))"/>
            <!--后置通知：切入点方法正常执行之后执行-->
            <aop:after-returning method="afterReturningAdvice" pointcut-ref="aopPoint"/>
            <!--异常通知：切入点方法产生异常时才会执行-->
            <!--<aop:after-throwing method="afterThrowingAdvice" pointcut="execution(* com.jk.xml.service.impl.*.*(..))"/>-->
            <aop:after-throwing method="afterThrowingAdvice" pointcut-ref="aopPoint"/>
            <!--最终通知：无论切入点方法是否正常执行，都会执行-->
            <!--<aop:after method="afterAdvice" pointcut="execution(* com.jk.xml.service.impl.*.*(..))"/>-->
            <aop:after method="afterAdvice" pointcut-ref="aopPoint"/>
            <!--
                以上配置有重复部分，也就是切点表达式，可以提出来单独配置，然后使用 point-ref 来引入 切入点表达式的 id
                aop:pointcut 标签：
                    属性：
                        id：唯一标志
                        expression：切点表达式
                注意：如果是写在 aop:aspect 标签内部，只能当前切面使用，也可以写在外部，其他切面也能使用。
                     如果写在外部，则必须写在 aop:aspect 标签的上面。
                     如果写在内部，可以写在通知标签下面。
            -->
            <aop:pointcut id="aopPoint" expression="execution(* com.jk.xml.service.impl.*.saveAccount(..))"/>
        </aop:aspect>
    </aop:config>
</beans>